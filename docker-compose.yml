services:
  backend:
    build:
      context: ./
      dockerfile: dev.Dockerfile
    ports:
      - '5000:5000'
    links:
      - mysql
      - minio
      - dynamodb
    env_file:
      - .env
    volumes:
      - ./public:/app/public
      - ./src:/app/src
      - ./server:/app/server
      - ./types:/app/types
    depends_on:
      migration:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
      dynamodb:
        condition: service_started

  migration:
    build:
      context: ./
      dockerfile: dev.Dockerfile
    links:
      - mysql
    env_file:
      - .env
    depends_on:
      mysql:
        condition: service_healthy
    command: ['yarn', 'run', 'migration:run-dev']

  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=my-secret-pw
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
    ports:
      - '3306:3306'
      - '33060:33060'
    volumes:
      - ./.mysql-data:/var/lib/mysql

  minio:
    image: minio/minio
    ports:
      - '9000:9000'
      - '9090:9090'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - ./.minio-data:/data
    entrypoint: sh
    command: -c 'mkdir -p /data/1village && /usr/bin/minio server --console-address ":9090" /data'

  dynamodb:
    command: '-jar DynamoDBLocal.jar -sharedDb -dbPath ./data'
    image: 'amazon/dynamodb-local:latest'
    ports:
      - '8000:8000'
    volumes:
      - './.dynamodb:/home/dynamodblocal/data'
    working_dir: /home/dynamodblocal
