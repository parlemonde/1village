@import 'variables';

// Use important to override Material UI styles.
body {
  font-size: 1rem !important;
  color: $font-color !important;
  font-weight: 400 !important;
  padding: 0 !important;
  overflow: auto !important;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}
h1 {
  font-size: 1.4rem;
  font-family: 'Roboto', 'Times New Roman', Times, serif;
  font-weight: 600;
}
h1.title {
  font-family: 'Alegreya Sans', 'Times New Roman', Times, serif;
  font-weight: 500;
  color: $primary-color;
}

h2 {
  font-size: 1.2rem;
  font-family: 'Roboto', 'Times New Roman', Times, serif;
  font-weight: 600;
}

h3 {
  font-size: 1.07rem;
  font-family: 'Roboto', 'Times New Roman', Times, serif;
  font-weight: 500;
}

label:hover {
  cursor: text;
}

// NProgress bar
body {
  #nprogress .bar {
    z-index: 2000 !important;
    background-color: $primary-color !important;
    height: 1px;
  }
  &.admin {
    #nprogress .bar {
      background-color: white !important;
    }
    .container-navbar {
      display: flex;
      height: 50px;
      padding: 0 50px;
    }
    .container-admin-nav ul {
      & div.like-button:not(first-child),
      a.like-button:not(first-child) {
        margin-top: 18px;
      }
      & div.like-button:not(last-child),
      a.like-button:not(last-child) {
        margin-bottom: 18px;
      }
    }
    .container-admin-portal {
      background-color: #d9dbfe91;
      padding: 0 50px !important;
      height: 100vh;
      @media screen and (min-width: 1600px) {
        padding: 0 15% !important;
      }
      .container-admin-nav {
        .MuiListItemText-root span {
          font-weight: bold;
        }
        @media screen and (max-width: 792px) {
          width: 100%;
          height: auto;
          margin-bottom: 20px;
          padding: 0;
          .like-button.blue {
            margin-left: auto;
            margin-right: auto;
          }
          .MuiListItemText-root {
            text-align: left;
          }
          &.child-container {
            margin: 0 !important;
          }
          ul {
            padding: 0 25px;
          }
        }
      }

      .content {
        @media screen and (max-width: 792px) {
          flex-direction: column;
          margin-top: 20px !important;
          width: 100%;
          height: auto;
        }
      }
    }
    div.like-button,
    a.like-button {
      border-radius: 10px;
      &.blue {
        width: 266px;
        height: 45px;
        background: white;
        border: 1px solid $primary-color;
        color: $primary-color;

        &.Mui-selected {
          color: white;
          background: $primary-color;
          width: 300px;
          svg,
          path {
            fill: white;
          }
        }
      }
      &.grey {
        background: #f5f5f5;
        span {
          font-weight: bold;
        }
      }
      @media screen and (max-width: 460px) {
        width: 100% !important;
      }
    }
  }
}

// Text style
.text {
  font-size: 1rem;
  font-family: 'Roboto', 'Times New Roman', Times, serif;
  font-weight: 400;
}
.text--bold {
  font-size: 1rem;
  font-weight: 500;
}
.text--small {
  font-size: 0.875rem;
  line-height: 0.875rem;
}
.text--primary {
  color: $primary-color;
}
.text--secondary {
  color: $secondary-color;
}
.text--alert,
.text--error {
  color: $error-color;
}
.text--help {
  color: $help-color;
}
.text--success {
  color: $success-color;
}
.text--warning {
  color: $warning-color;
}
.text--bold {
  font-weight: 600;
}
.text--detail {
  color: $font-detail;
}
.text--orange-background {
  background-color: rgb(243, 121, 52);
  color: white;
  display: inline-block;
}

a {
  font-size: inherit;
  font-family: inherit;
  font-weight: inherit;
  color: inherit;
  text-decoration: none;
}
.leaflet {
  a {
    font-size: 11px;
  }
}
a.text {
  font-size: 1rem;
  font-family: 'Roboto', 'Times New Roman', Times, serif;
  font-weight: 400;
  color: $font-color;
  cursor: pointer;
}
a.text:hover,
a.text:focus-visible {
  border-bottom: 1px solid $font-color;
}
a.text-primary:hover {
  border-bottom: 1px solid $primary-color;
}
a.text--primary:hover {
  border-bottom: 1px solid $primary-color;
}
a.text--secondary:hover {
  border-bottom: 1px solid $secondary-color;
}
a.text--alert,
a.text--error:hover {
  border-bottom: 1px solid $error-color;
}
a.text--help:hover {
  border-bottom: 1px solid $help-color;
}
a.text--success:hover {
  border-bottom: 1px solid $success-color;
}

// misc
.bg-gradiant {
  width: 100vw;
  min-height: 100vh;
  background: rgb(224, 195, 252);
  background: -o-linear-gradient(315deg, rgba(224, 195, 252, 1) 0%, rgba(142, 197, 252, 1) 100%);
  background: linear-gradient(135deg, rgba(224, 195, 252, 1) 0%, rgba(142, 197, 252, 1) 100%);
  background-attachment: fixed;
  overflow: auto;
  display: flex;
  justify-content: center;
  align-items: center;
}
.bg-grey {
  background-color: $bg-page;
}
.bg-primary {
  background-color: $primary-color;
}
.bg-primary-light {
  background-color: $primary-color-light;
}
.bg-secondary {
  background-color: $secondary-color;
}
.bg-help {
  background-color: $help-color;
}
.bg-error,
.bg-alert {
  background-color: $error-color;
}
.button-error {
  border-color: $error-color;
}
.bg-success {
  background-color: $success-color;
}
.hover-bg-primary:hover {
  background-color: $primary-color;
  color: white;
}

.full-width {
  width: 100%;
}
.text-center {
  width: 100%;
  text-align: center;
}
.absolute-center {
  position: absolute;
  top: 0px;
  left: 0px;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.flex-center {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.shadow-svg {
  filter: drop-shadow(0.5px 2px 0 rgba(187, 187, 187, 0.8));
}
.with-shadow {
  -webkit-box-shadow: 0px 2px 2px 0px rgba(187, 187, 187, 0.8);
  -moz-box-shadow: 0px 2px 2px 0px rgba(187, 187, 187, 0.8);
  box-shadow: 0px 2px 2px 0px rgba(187, 187, 187, 0.8);
}
.with-light-shadow {
  -webkit-box-shadow: 2px 2px 2px 0px rgba(218, 216, 216, 0.6);
  -moz-box-shadow: 2px 2px 2px 0px rgba(218, 216, 216, 0.6);
  box-shadow: 2px 2px 2px 0px rgba(218, 216, 216, 0.6);
}

#village-demande-modal {
  .MuiDialog-paper {
    overflow: visible;
    .MuiDialogContent-root {
      overflow: visible;
    }
  }
}

.multine-with-ellipsis {
  @include multiLineEllipsis($lineHeight: 1rem, $bgColor: white);
  max-height: 1rem; // 1 line. -> override this for more lines.
}

.custom-steps--container {
  .MuiStepLabel-label.MuiStepLabel-alternativeLabel {
    margin-top: 0.25rem !important;
    color: $primary-color;
  }
  .MuiStepLabel-label.Mui-active {
    color: $primary-color !important;
    font-weight: 500;
  }
  .MuiStepLabel-label.Mui-completed {
    color: $success-color !important;
    font-weight: 500;
  }
  .MuiStepLabel-label.Mui-completed.Mui-error {
    color: $warning-color !important;
    font-weight: 500;
  }
}

.width-900 {
  margin: 0 auto 1rem auto;
  width: 100%;
  max-width: 900px;
}

.break-long-words {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

.MuiIconButton-root.MuiIconButton-sizeSmall {
  padding: 3px;
  font-size: 1.125rem;
}

.background-hover {
  cursor: pointer;
  &:hover {
    background-color: black;
  }
}

// ----- MAP ----
.mapboxgl-map {
  height: 100%;
}
.leaflet-container {
  height: 100%;
}
.fullscreen-icon {
  background-image: url('/icon-fullscreen.png');
}
.leaflet-retina .fullscreen-icon {
  background-image: url('/icon-fullscreen-2x.png');
  background-size: 26px 26px;
}
